Конечно, вот последовательность команд для выполнения вашей задачи.

### 1\. Создание сети

Сначала создадим сеть с драйвером `bridge` и именем `inno-25-bridge`.

```bash
docker network create --driver bridge inno-25-bridge
```

-----

### 2\. Просмотр списка сетей

Теперь выведем список всех сетей, чтобы убедиться, что наша сеть `inno-25-bridge` успешно создана.

```bash
docker network ls
```

Вы должны увидеть `inno-25-bridge` в списке.

-----

### 3\. Запуск контейнера Nginx

Создадим контейнер `inno-dkr-25-nginx` из образа `nginx:stable` в фоновом режиме (`-d`) и подключим его к созданной нами сети.

```bash
docker run -d --name inno-dkr-25-nginx --network inno-25-bridge nginx:stable
```

-----

### 4\. Запуск контейнера Alpine и проверка связи

Наконец, запустим второй контейнер `inno-dkr-25-pinger` в интерактивном режиме (`-it`), установим в нем `curl` и обратимся к контейнеру Nginx по его имени, которое работает как DNS-запись внутри одной сети Docker.

```bash
docker run -it --name inno-dkr-25-pinger --network inno-25-bridge alpine:3.10
```

После выполнения этой команды вы окажетесь внутри командной строки контейнера `inno-dkr-25-pinger`. Далее выполните следующие команды уже **внутри** этого контейнера:

1.  **Установите `curl`:**
    ```sh
    apk add curl
    ```
2.  **Обратитесь к контейнеру Nginx:**
    ```sh
    curl inno-dkr-25-nginx
    ```

В ответ вы должны получить стандартную приветственную HTML-страницу Nginx. Это подтвердит, что контейнеры видят друг друга по сети `inno-25-bridge` и могут общаться по именам.
